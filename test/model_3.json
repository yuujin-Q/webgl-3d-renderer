{
  "asset": {
    "version": "2.0"
  },
  "scenes": [
    {
      "nodes": [
        0
      ]
    }
  ],
  "nodes": [
    {
      "position": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "parent": null
    },
    {
      "position": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              0,
              0,
              0,
              0,
              150,
              0,
              30,
              0,
              0,
              0,
              150,
              0,
              30,
              150,
              0,
              30,
              0,
              0,
              30,
              0,
              0,
              30,
              30,
              0,
              100,
              0,
              0,
              30,
              30,
              0,
              100,
              30,
              0,
              100,
              0,
              0,
              30,
              60,
              0,
              30,
              90,
              0,
              67,
              60,
              0,
              30,
              90,
              0,
              67,
              90,
              0,
              67,
              60,
              0,
              0,
              0,
              30,
              30,
              0,
              30,
              0,
              150,
              30,
              0,
              150,
              30,
              30,
              0,
              30,
              30,
              150,
              30,
              30,
              0,
              30,
              100,
              0,
              30,
              30,
              30,
              30,
              30,
              30,
              30,
              100,
              0,
              30,
              100,
              30,
              30,
              30,
              60,
              30,
              67,
              60,
              30,
              30,
              90,
              30,
              30,
              90,
              30,
              67,
              60,
              30,
              67,
              90,
              30,
              0,
              0,
              0,
              100,
              0,
              0,
              100,
              0,
              30,
              0,
              0,
              0,
              100,
              0,
              30,
              0,
              0,
              30,
              100,
              0,
              0,
              100,
              30,
              0,
              100,
              30,
              30,
              100,
              0,
              0,
              100,
              30,
              30,
              100,
              0,
              30,
              30,
              30,
              0,
              30,
              30,
              30,
              100,
              30,
              30,
              30,
              30,
              0,
              100,
              30,
              30,
              100,
              30,
              0,
              30,
              30,
              0,
              30,
              60,
              30,
              30,
              30,
              30,
              30,
              30,
              0,
              30,
              60,
              0,
              30,
              60,
              30,
              30,
              60,
              0,
              67,
              60,
              30,
              30,
              60,
              30,
              30,
              60,
              0,
              67,
              60,
              0,
              67,
              60,
              30,
              67,
              60,
              0,
              67,
              90,
              30,
              67,
              60,
              30,
              67,
              60,
              0,
              67,
              90,
              0,
              67,
              90,
              30,
              30,
              90,
              0,
              30,
              90,
              30,
              67,
              90,
              30,
              30,
              90,
              0,
              67,
              90,
              30,
              67,
              90,
              0,
              30,
              90,
              0,
              30,
              150,
              30,
              30,
              90,
              30,
              30,
              90,
              0,
              30,
              150,
              0,
              30,
              150,
              30,
              0,
              150,
              0,
              0,
              150,
              30,
              30,
              150,
              30,
              0,
              150,
              0,
              30,
              150,
              30,
              30,
              150,
              0,
              0,
              0,
              0,
              0,
              0,
              30,
              0,
              150,
              30,
              0,
              0,
              0,
              0,
              150,
              30,
              0,
              150,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "BasicMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n\n    uniform mat4 u_matrix;\n\n    varying vec4 v_color;\n\n    void main() {\n      // Multiply the position by the matrix.\n      gl_Position = u_matrix * a_position;\n\n      // Pass the color to the fragment shader.\n      v_color = a_color;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    // Passed in from the vertex shader.\n    varying vec4 v_color;\n\n    void main() {\n      gl_FragColor = v_color;\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 0
    },
    {
      "position": {
        "x": 200,
        "y": 0,
        "z": 200
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -50,
              -50,
              100,
              50,
              -50,
              100,
              50,
              50,
              100,
              -50,
              50,
              100,
              -50,
              -50,
              100,
              50,
              50,
              100,
              50,
              -50,
              -100,
              -50,
              -50,
              -100,
              -50,
              50,
              -100,
              50,
              50,
              -100,
              50,
              -50,
              -100,
              -50,
              50,
              -100,
              -50,
              50,
              100,
              50,
              50,
              100,
              50,
              50,
              -100,
              -50,
              50,
              -100,
              -50,
              50,
              100,
              50,
              50,
              -100,
              50,
              -50,
              100,
              -50,
              -50,
              100,
              -50,
              -50,
              -100,
              50,
              -50,
              -100,
              50,
              -50,
              100,
              -50,
              -50,
              -100,
              50,
              -50,
              100,
              50,
              -50,
              -100,
              50,
              50,
              -100,
              50,
              50,
              100,
              50,
              -50,
              100,
              50,
              50,
              -100,
              -50,
              -50,
              -100,
              -50,
              -50,
              100,
              -50,
              50,
              100,
              -50,
              50,
              -100,
              -50,
              -50,
              -100,
              -50,
              50,
              100
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 0
    },
    {
      "position": {
        "x": 0,
        "y": 200,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -50,
              -100,
              0,
              50,
              -100,
              0,
              50,
              100,
              0,
              -50,
              100,
              0,
              -50,
              -100,
              0,
              50,
              100,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 0
    },
    {
      "position": {
        "x": -400,
        "y": 0,
        "z": 200
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "parent": 0
    },
    {
      "position": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -100,
              -50,
              50,
              100,
              -50,
              50,
              100,
              50,
              50,
              -100,
              50,
              50,
              -100,
              -50,
              50,
              100,
              50,
              50,
              100,
              -50,
              -50,
              -100,
              -50,
              -50,
              -100,
              50,
              -50,
              100,
              50,
              -50,
              100,
              -50,
              -50,
              -100,
              50,
              -50,
              -100,
              50,
              50,
              100,
              50,
              50,
              100,
              50,
              -50,
              -100,
              50,
              -50,
              -100,
              50,
              50,
              100,
              50,
              -50,
              100,
              -50,
              50,
              -100,
              -50,
              50,
              -100,
              -50,
              -50,
              100,
              -50,
              -50,
              100,
              -50,
              50,
              -100,
              -50,
              -50,
              100,
              -50,
              50,
              100,
              -50,
              -50,
              100,
              50,
              -50,
              100,
              50,
              50,
              100,
              -50,
              50,
              100,
              50,
              -50,
              -100,
              -50,
              -50,
              -100,
              -50,
              50,
              -100,
              50,
              50,
              -100,
              50,
              -50,
              -100,
              -50,
              -50,
              -100,
              50,
              50
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 4
    },
    {
      "position": {
        "x": 55,
        "y": 40,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 25
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              -37.5,
              37.5,
              37.5,
              -37.5,
              37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              -37.5,
              37.5,
              37.5
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 5
    },
    {
      "position": {
        "x": 30,
        "y": -25,
        "z": 30
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -25,
              -75,
              25,
              25,
              -75,
              25,
              25,
              75,
              25,
              -25,
              75,
              25,
              -25,
              -75,
              25,
              25,
              75,
              25,
              25,
              -75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              -25,
              25,
              75,
              -25,
              25,
              -75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              25,
              25,
              75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              25,
              25,
              -75,
              -25,
              25,
              75,
              -25,
              25,
              75,
              25,
              25,
              -75,
              25,
              25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              -75,
              25,
              -25,
              75,
              25,
              -25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              25
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {}
      },
      "parent": 5
    },
    {
      "position": {
        "x": 30,
        "y": -25,
        "z": -30
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -25,
              -75,
              25,
              25,
              -75,
              25,
              25,
              75,
              25,
              -25,
              75,
              25,
              -25,
              -75,
              25,
              25,
              75,
              25,
              25,
              -75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              -25,
              25,
              75,
              -25,
              25,
              -75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              25,
              25,
              75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              25,
              25,
              -75,
              -25,
              25,
              75,
              -25,
              25,
              75,
              25,
              25,
              -75,
              25,
              25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              -75,
              25,
              -25,
              75,
              25,
              -25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              25
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {}
      },
      "parent": 5
    },
    {
      "position": {
        "x": -30,
        "y": -25,
        "z": 30
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -25,
              -75,
              25,
              25,
              -75,
              25,
              25,
              75,
              25,
              -25,
              75,
              25,
              -25,
              -75,
              25,
              25,
              75,
              25,
              25,
              -75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              -25,
              25,
              75,
              -25,
              25,
              -75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              25,
              25,
              75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              25,
              25,
              -75,
              -25,
              25,
              75,
              -25,
              25,
              75,
              25,
              25,
              -75,
              25,
              25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              -75,
              25,
              -25,
              75,
              25,
              -25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              25
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {}
      },
      "parent": 5
    },
    {
      "position": {
        "x": -30,
        "y": -25,
        "z": -30
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -25,
              -75,
              25,
              25,
              -75,
              25,
              25,
              75,
              25,
              -25,
              75,
              25,
              -25,
              -75,
              25,
              25,
              75,
              25,
              25,
              -75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              -25,
              25,
              75,
              -25,
              25,
              -75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              25,
              25,
              75,
              -25,
              -25,
              75,
              -25,
              -25,
              75,
              25,
              25,
              75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              -25,
              25,
              -75,
              25,
              -25,
              -75,
              -25,
              25,
              -75,
              25,
              25,
              -75,
              -25,
              25,
              75,
              -25,
              25,
              75,
              25,
              25,
              -75,
              25,
              25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              -75,
              25,
              -25,
              75,
              25,
              -25,
              75,
              -25,
              -25,
              -75,
              -25,
              -25,
              75,
              25
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {}
      },
      "parent": 5
    },
    {
      "position": {
        "x": -60,
        "y": 15,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 25
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "geometry": {
        "attributes": {
          "a_position": {
            "data": [
              -50,
              -12.5,
              12.5,
              50,
              -12.5,
              12.5,
              50,
              12.5,
              12.5,
              -50,
              12.5,
              12.5,
              -50,
              -12.5,
              12.5,
              50,
              12.5,
              12.5,
              50,
              -12.5,
              -12.5,
              -50,
              -12.5,
              -12.5,
              -50,
              12.5,
              -12.5,
              50,
              12.5,
              -12.5,
              50,
              -12.5,
              -12.5,
              -50,
              12.5,
              -12.5,
              -50,
              12.5,
              12.5,
              50,
              12.5,
              12.5,
              50,
              12.5,
              -12.5,
              -50,
              12.5,
              -12.5,
              -50,
              12.5,
              12.5,
              50,
              12.5,
              -12.5,
              50,
              -12.5,
              12.5,
              -50,
              -12.5,
              12.5,
              -50,
              -12.5,
              -12.5,
              50,
              -12.5,
              -12.5,
              50,
              -12.5,
              12.5,
              -50,
              -12.5,
              -12.5,
              50,
              -12.5,
              12.5,
              50,
              -12.5,
              -12.5,
              50,
              12.5,
              -12.5,
              50,
              12.5,
              12.5,
              50,
              -12.5,
              12.5,
              50,
              12.5,
              -12.5,
              -50,
              -12.5,
              -12.5,
              -50,
              -12.5,
              12.5,
              -50,
              12.5,
              12.5,
              -50,
              12.5,
              -12.5,
              -50,
              -12.5,
              -12.5,
              -50,
              12.5,
              12.5
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          },
          "a_normal": {
            "data": [
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0,
              -1,
              0,
              0
            ],
            "size": 3,
            "dtype": 5126,
            "normalize": false,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "material": {
        "id": "PhongMaterial",
        "vertexShader": "\n    attribute vec4 a_position;\n    attribute vec4 a_color;\n    attribute vec4 a_normal;\n    \n    uniform mat4 u_matrix;\n    \n    varying vec4 v_color;\n    // varying vec3 v_eyevec;\n    varying vec4 v_normal;\n\n    void main() {\n      vec4 vertex = u_matrix * a_position;\n      \n      v_color = a_color;\n      // v_eyevec = -vertex.xyz;\n      v_normal = u_matrix * a_normal;\n      gl_Position = vertex;\n    }\n    ",
        "fragmentShader": "\n    precision mediump float;\n\n    varying vec4 v_color;\n    varying vec4 v_normal;\n    \n    void main() {\n      vec3 ambient = vec3(0.4, 0.4, 0.4);\n\n      vec3 normal = normalize(v_normal.xyz);\n      vec3 lightColor = vec3(1.0, 1.0, 1.0);\n      vec3 lightSource = vec3(1.0, 0.0, 0.0);\n      float diffuseStrength = max(0.0, dot(lightSource, normal));\n      vec3 diffuse = diffuseStrength*lightColor;\n\n      vec3 cameraSource = vec3(0.0, 0.0, 1.0);\n      vec3 viewSource = normalize(cameraSource);\n      vec3 reflectSource = normalize(reflect(-lightSource, normal));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 2.0);\n      vec3 specular = specularStrength*lightColor;\n\n      vec3 lighting = vec3(0.0, 0.0, 0.0);\n      lighting = ambient;\n      lighting = ambient*0.0+diffuse;\n      lighting = ambient*0.0+diffuse*0.5+specular*0.5;\n\n      vec4 colorr = vec4(0.75, 0.75, 0.75, 0.75);\n      vec3 color = v_color.xyz * lighting;\n      gl_FragColor = vec4(color, 1.0);\n    }\n    ",
        "uniforms": {},
        "attributes": {
          "a_color": {
            "data": [
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              200,
              70,
              120,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              80,
              70,
              200,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              70,
              200,
              210,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              200,
              200,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              210,
              160,
              70,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              70,
              180,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              100,
              70,
              210,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              76,
              210,
              100,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              140,
              210,
              80,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              90,
              130,
              110,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220,
              160,
              160,
              220
            ],
            "size": 3,
            "dtype": 5121,
            "normalize": true,
            "stride": 0,
            "offset": 0
          }
        }
      },
      "parent": 5
    },
    {
      "position": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "rotation": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "scale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "projectionMatrix": {
        "elements": [
          0.0016666666666666668,
          0,
          0,
          0,
          0,
          0.0016666666666666668,
          0,
          0,
          0,
          0,
          -0.0005,
          0,
          0,
          0,
          0,
          1
        ]
      },
      "invWorldMatrix": {
        "elements": [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ]
      },
      "parent": 0
    }
  ]
}